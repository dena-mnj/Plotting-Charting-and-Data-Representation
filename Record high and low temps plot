# Write some python code which returns a line graph of the record high and record low temperatures by day of the year over the period 2005-2014. 
#The area between the record high and record low temperatures for each day should be shaded.
# Overlay a scatter of the 2015 data for any points (highs and lows) for which the ten year record (2005-2014) record high or record low was broken in 2015.
# Watch out for leap days (i.e. February 29th), it is reasonable to remove these points from the dataset for the purpose of this visualization.
# Make the visual nice! Leverage principles from the first module in this course when developing your solution. Consider issues such as legends, labels, and 
# chart junk.
# The data you have been given is near Ann Arbor, Michigan, United States, and the stations the data comes from are shown on the map below.


import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import datetime as dt
import mplleaflet
import pandas as pd
import numpy as np

# Map of the world with alltitude and longitude of the stations
def leaflet_plot_stations(binsize, hashid):

    df = pd.read_csv('data/C2A2_data/BinSize_d{}.csv'.format(binsize))

    station_locations_by_hash = df[df['hash'] == hashid]

    lons = station_locations_by_hash['LONGITUDE'].tolist()
    lats = station_locations_by_hash['LATITUDE'].tolist()

    plt.figure(figsize=(8,8))

    plt.scatter(lons, lats, c='r', alpha=0.7, s=200)

    return mplleaflet.display()

#leaflet_plot_stations(400,'fb441e62df2d58994928907a91895ec62c2c42e6cd075c2700843b89')

# a line graph of the record high and record low temperatures by day of the year over the period 2005-2014. 
def plot_temp(start_date,end_date):
    
    df = pd.read_csv('data/C2A2_data/BinnedCsvs_d400/fb441e62df2d58994928907a91895ec62c2c42e6cd075c2700843b89.csv')
    
    df['Date'] = pd.to_datetime(df.Date)
    
    df1 = df[(df['Date'] > start_date) & (df['Date'] <= end_date)]
    df1 = df1[~((df1.Date.dt.month == 2) & (df1.Date.dt.day == 29))]
    
    df_tmin=df1[df1['Element']=='TMIN'].set_index('Date')
    df_tmax=df1[df1['Element']=='TMAX'].set_index('Date')
    
    tmin=df_tmin.groupby([df_tmin.index.month,df_tmin.index.day]).min()
    tmax=df_tmax.groupby([df_tmax.index.month,df_tmax.index.day]).max()

    dates = pd.date_range('2011-01-01', '2011-12-31')
    
    plt.figure(figsize=(18,8))
    plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%b %d'))
    plt.plot(dates,tmin['Data_Value']/10,label='T_Min 2005-2014')
    plt.gcf().autofmt_xdate()

    plt.plot(dates ,tmax['Data_Value']/10,'--r',label='T_Max 2005-2014')
    
    plt.xlabel('Date')
    plt.ylabel('Temp $^o$C')
    plt.title('Temp data from Ann Arbor station')
 
    # fill the area between the graphs
    plt.gca().fill_between(dates, tmax['Data_Value']/10, tmin['Data_Value']/10, facecolor='blue',alpha=0.25)
    
    # Overlay a scatter of the 2015 data for any points (highs and lows) for which the ten year record (2005-2014)
    # record high or record low was broken in 2015 
    
    df2 = df[(df['Date'] >= '2015-01-01') & (df['Date'] <= '2015-12-31')]
    df2 = df2[~((df2.Date.dt.month == 2) & (df2.Date.dt.day == 29))]
    
    df_tmin=df2[df2['Element']=='TMIN'].set_index('Date')
    df_tmax=df2[df2['Element']=='TMAX'].set_index('Date')
    
    tmin15=df_tmin.groupby([df_tmin.index.month,df_tmin.index.day]).min()
    tmax15=df_tmax.groupby([df_tmax.index.month,df_tmax.index.day]).max()
    
    tmin15[tmin15['Data_Value']>tmin['Data_Value']]=np.nan
    tmax15[tmax15['Data_Value']<tmax['Data_Value']]=np.nan
    
    plt.scatter(dates ,tmin15['Data_Value']/10,s=30,c='black',label='record low in 2015')
    plt.scatter(dates ,tmax15['Data_Value']/10,s=30,c='green',label='record high in 2015')
    
    plt.legend(loc=(0.42, 0.15), title=None, frameon=False)
    plt.gca().set_xbound(dt.date(2011, 1, 1), dt.date(2011, 12, 31))
    
    plt.gca().spines['top'].set_visible(False)
    plt.gca().spines['right'].set_visible(False)
    

plot_temp('2005-01-01','2014-12-30' )
plt.show()

